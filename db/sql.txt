create database com_vida;

use com_vida; 

create table estado (
	codest integer auto_increment primary key, 
	desest varchar(20) not null,
	unifedest char(2) not null
);

create table cidade (
	codcid integer auto_increment primary key, 
	codest integer not null,
	nomcid varchar(30) not null,
	constraint cidade_codest_fk foreign key (codest) references estado (codest)
);

create table cep_endereco (
	codcepend integer auto_increment primary key, 
	codcid integer not null,
	numcep integer not null,
	constraint cep_codcid_fk foreign key (codcid) references cidade (codcid)
);

create table genero (
	codgen integer auto_increment primary key,
	desgen varchar(15) not null
);

create table usuario (
	codusu integer auto_increment primary key, 
	codgen integer not null, 
	codcepend integer not null,
	nomusu varchar(50) not null,
	datnasusu date not null, 
	avausu blob not null, 
	logusu varchar(20) not null,
	senusu varchar(20) not null,
	constraint usuario_codgen_fk foreign key (codgen) references genero (codgen),
	constraint usuario_codcepend_fk foreign key (codcepend) references cep_endereco (codcepend)
);

create table sintoma (
	codsin integer auto_increment primary key, 
	dessin varchar(30) not null
);

create table intensidade (
	codint integer auto_increment primary key, 
	desint varchar(10) not null
);

create table prontuario (
	codpro integer auto_increment primary key, 
	codusu integer not null, 
	datcadpro date not null,
	retpro boolean,
	datretpro date,
	constraint prontuario_codusu_fk foreign key (codusu) references usuario (codusu)
);

create table prontuario_sintoma (
	codsinpro integer auto_increment primary key, 
	codpro integer not null, 
	codsin integer not null, 
	codint integer not null, 
	constraint prontuario_sintomas_codpro_fk foreign key (codpro) references prontuario (codpro),
	constraint prontuario_sintomas_codsin_fk foreign key (codsin) references sintoma (codsin),
	constraint prontuario_sintomas_codint_fk foreign key (codint) references intensidade (codint)
);


/***********************************************************/

insert into estado (codest, desest, unifedest) values (1, 'RIO GRANDE DO SUL', 'RS');
insert into estado (codest, desest, unifedest) values (2, 'SANTA CATARINA', 'SC');
insert into estado (codest, desest, unifedest) values (3, 'PARANÁ', 'PR');

insert into estado (codest, desest, unifedest) values (4, 'SÃO PAULO', 'SP');
insert into estado (codest, desest, unifedest) values (5, 'RIO DE JANEIRO', 'RJ');
insert into estado (codest, desest, unifedest) values (6, 'ESPÍRITO SANTO', 'ES');
insert into estado (codest, desest, unifedest) values (7, 'MINAS GERAIS', 'MG');

insert into estado (codest, desest, unifedest) values (8, 'GOIÁS', 'GO');
insert into estado (codest, desest, unifedest) values (9, 'MATO GROSSO', 'MT');
insert into estado (codest, desest, unifedest) values (10, 'MATO GROSSO DO SUL', 'MS');

insert into estado (codest, desest, unifedest) values (11, 'ALAGOAS', 'AL');
insert into estado (codest, desest, unifedest) values (12, 'BAHIA', 'BA');
insert into estado (codest, desest, unifedest) values (13, 'CEARÁ', 'CE');
insert into estado (codest, desest, unifedest) values (14, 'MARANHÃO', 'MA');
insert into estado (codest, desest, unifedest) values (15, 'PARAÍBA', 'PB');
insert into estado (codest, desest, unifedest) values (16, 'PERNAMBUCO', 'PE');
insert into estado (codest, desest, unifedest) values (17, 'PIAUÍ', 'PI');
insert into estado (codest, desest, unifedest) values (18, 'RIO GRANDE DO NORTE', 'RN');
insert into estado (codest, desest, unifedest) values (19, 'SERGIPE', 'SE');

insert into estado (codest, desest, unifedest) values (20, 'ACRE', 'AC');
insert into estado (codest, desest, unifedest) values (21, 'AMAPÁ', 'AP');
insert into estado (codest, desest, unifedest) values (22, 'AMAZONAS', 'AM');
insert into estado (codest, desest, unifedest) values (23, 'PARÁ', 'PA');
insert into estado (codest, desest, unifedest) values (24, 'RONDÔNIA', 'RO');
insert into estado (codest, desest, unifedest) values (25, 'RORAIMA', 'RR');
insert into estado (codest, desest, unifedest) values (26, 'TOCANTINS', 'TO');


insert into genero (codgen, desgen) values (1, 'MASCULINO');
insert into genero (codgen, desgen) values (2, 'FEMININO');

insert into sintoma (codsin, dessin) values (1, 'Febre');
insert into sintoma (codsin, dessin) values (2, 'Tosse Seca');
insert into sintoma (codsin, dessin) values (3, 'Cansaço');
insert into sintoma (codsin, dessin) values (4, 'Dor de Garganta');
insert into sintoma (codsin, dessin) values (5, 'Diarreia');
insert into sintoma (codsin, dessin) values (6, 'Conjuntivite');
insert into sintoma (codsin, dessin) values (7, 'Dor de Cabeça');
insert into sintoma (codsin, dessin) values (8, 'Perda de Paladar ou Olfato');
insert into sintoma (codsin, dessin) values (9, 'Dificuldade de Respirar');
insert into sintoma (codsin, dessin) values (10, 'Dor no Peito');
insert into sintoma (codsin, dessin) values (11, 'Dores no Corpo');
insert into sintoma (codsin, dessin) values (12, 'Perda de Fala ou Movimento');


insert into intensidade (codint, desint) values (1, 'Leve');
insert into intensidade (codint, desint) values (2, 'Moderada');
insert into intensidade (codint, desint) values (3, 'Elevada');

/*************************************************************************/

create user 'desenvolvimento'@'localhost' identified by '$k£Y!M@sT3R';
grant select, insert, update, delete on com_vida . * to 'desenvolvimento'@'localhost';


/*************************************************************************/


CREATE OR REPLACE PROCEDURE salvar_cidade_cep_endereco (
    uf CHAR(2),
	cidade VARCHAR(30), 
	cep INT
)
BEGIN
	
    START TRANSACTION;
    
	DECLARE codEst INT;
    DECLARE codCid INT;
    
    SELECT codest INTO codEst FROM estado WHERE unifedest = uf;
    
    SELECT codcid INTO codCid FROM cidade WHERE nomcid = cidade;
    
    IF codCid = NULL THEN
    	INSERT INTO cidade (codest, nomcid) VALUES (codEst, cidade);
    END IF;
    
    SELECT MAX(codcid) INTO codCid FROM cidade;
    
    INSERT INTO cep_endereco (codcid, numcep) VALUES (codCid, cep);
   		
	COMMIT;
END;



		/*CREATE FUNCTION salvar_usuario_completo (
	codusu INT, 
    nomusu VARCHAR(50),
	datnasusu DATE, 
	avausu BLOB, 
	logusu VARCHAR(20),
	senusu VARCHAR(20),
	codgen INT,
	codcepend INT
)
RETURNS BOOLEAN

BEGIN

   	IF codusu = NULL THEN
   		
   	ELSE
      IF n > m THEN SET s = 'greater';
      ELSE SET s = 'less';
      END IF;

      SET s = CONCAT('is ', s, ' than');
    END IF;

    SET s = CONCAT(n, ' ', s, ' ', m, '.');

    RETURN s;

   RETURN income;

END;*/


